{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class FormDemoComponent {\n  constructor(renderer, el) {\n    this.renderer = renderer;\n    this.el = el;\n    this.formId = 'form_adopt022';\n  }\n  ngOnInit() {\n    this.initNeuroIDScript();\n  }\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      let r = Math.random() * 16 | 0,\n        v = c === 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n  initNeuroIDScript() {\n    // Using Renderer2 for DOM manipulations\n    const s = this.renderer.createElement('script');\n    s.type = 'text/javascript';\n    s.src = 'https://scripts.neuro-id.com/c/nid-adopt022-test.js';\n    s.async = true;\n    s.onload = () => {\n      this.myUuid = this.uuidv4();\n      console.log(this.myUuid);\n      nid('identify', this.myUuid);\n      nid('setDebug', true);\n      console.log(\"NeuroID UserId:\", this.myUuid);\n    };\n    this.renderer.appendChild(this.el.nativeElement.ownerDocument.body, s);\n  }\n}\n_class = FormDemoComponent;\n_class.ɵfac = function FormDemoComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-form-demo\"]],\n  decls: 37,\n  vars: 2,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"logo-container\"], [\"src\", \"https://images.saasworthy.com/neuroid_39277_logo_1658232019_h8jca.png\"], [1, \"form-container\"], [\"action\", \"/submit\", \"method\", \"post\"], [\"id\", \"uuidLabel\"], [1, \"form-field\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"name\", \"firstName\", \"id\", \"firstName\", \"required\", \"\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"name\", \"lastName\", \"id\", \"lastName\", \"required\", \"\"], [\"for\", \"phone\"], [\"type\", \"tel\", \"name\", \"phone\", \"id\", \"phone\", \"required\", \"\"], [\"for\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"email\", \"required\", \"\"], [\"for\", \"address\"], [\"type\", \"text\", \"name\", \"address\", \"id\", \"address\", \"required\", \"\"], [\"type\", \"submit\", \"value\", \"Submit\"]],\n  template: function FormDemoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n      i0.ɵɵelementStart(4, \"title\");\n      i0.ɵɵtext(5, \"NeuroID Demo\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"body\")(7, \"div\", 3);\n      i0.ɵɵelement(8, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 5)(10, \"form\", 6)(11, \"span\", 7);\n      i0.ɵɵtext(12);\n      i0.ɵɵelement(13, \"br\");\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 8)(16, \"label\", 9);\n      i0.ɵɵtext(17, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 8)(20, \"label\", 11);\n      i0.ɵɵtext(21, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 8)(24, \"label\", 13);\n      i0.ɵɵtext(25, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 8)(28, \"label\", 15);\n      i0.ɵɵtext(29, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 8)(32, \"label\", 17);\n      i0.ɵɵtext(33, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"input\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 8);\n      i0.ɵɵelement(36, \"input\", 19);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵtextInterpolate1(\"NeuroID UserId: \", ctx.myUuid, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Form Id: \", ctx.formId, \"\");\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \"body[_ngcontent-%COMP%] {\\n            font-family: Arial, sans-serif;\\n        }\\n        .form-container[_ngcontent-%COMP%] {\\n            width: 300px;\\n            margin: auto;\\n            padding: 20px;\\n            border: 1px solid #ccc;\\n        }\\n        .form-field[_ngcontent-%COMP%] {\\n            margin-bottom: 15px;\\n        }\\n        label[_ngcontent-%COMP%] {\\n            display: block;\\n            margin-bottom: 5px;\\n        }\\n        input[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"tel\\\"][_ngcontent-%COMP%] {\\n            width: 100%;\\n            padding: 5px;\\n            border: 1px solid #ccc;\\n        }\\n        input[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n            padding: 10px 20px;\\n            background-color: #007bff;\\n            color: #fff;\\n            border: none;\\n            cursor: pointer;\\n        }\\n        .logo-container[_ngcontent-%COMP%] {\\n            text-align: center;\\n            margin-bottom: 20px;\\n        }\\n        img[_ngcontent-%COMP%] {\\n            max-width: 150px;\\n        }\"]\n});","map":{"version":3,"names":["FormDemoComponent","constructor","renderer","el","formId","ngOnInit","initNeuroIDScript","uuidv4","replace","c","r","Math","random","v","toString","s","createElement","type","src","async","onload","myUuid","console","log","nid","appendChild","nativeElement","ownerDocument","body","i0","ɵɵdirectiveInject","Renderer2","ElementRef","selectors","decls","vars","consts","template","FormDemoComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["/Users/burakkebapci/Desktop/NeuroID_Angular_App_Example/src/app/form-demo/form-demo.component.ts","/Users/burakkebapci/Desktop/NeuroID_Angular_App_Example/src/app/form-demo/form-demo.component.html"],"sourcesContent":["import { Component, OnInit, Renderer2, ElementRef } from '@angular/core';\n\ndeclare const nid: any; // Declare the NeuroID function\n\n@Component({\n  selector: 'app-form-demo',\n  templateUrl: './form-demo.component.html',\n  styleUrls: ['./form-demo.component.css']\n})\nexport class FormDemoComponent implements OnInit {\n  public myUuid?: string;\n  public formId: string = 'form_adopt022';\n\n  constructor(private renderer: Renderer2, private el: ElementRef) { }\n\n  ngOnInit(): void {\n    this.initNeuroIDScript(); \n  }\n\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      let r = Math.random() * 16 | 0,\n          v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n  initNeuroIDScript() {\n    // Using Renderer2 for DOM manipulations\n    const s = this.renderer.createElement('script');\n    s.type = 'text/javascript';\n    s.src = 'https://scripts.neuro-id.com/c/nid-adopt022-test.js';\n    s.async = true;\n    \n    s.onload = () => {\n      this.myUuid = this.uuidv4();\n      console.log(this.myUuid);\n      nid('identify',this. myUuid);\n      nid('setDebug',true);\n      console.log(\"NeuroID UserId:\", this.myUuid);\n      };\n  \n    this.renderer.appendChild(this.el.nativeElement.ownerDocument.body, s);\n\n    \n    \n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>NeuroID Demo</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n        }\n        .form-container {\n            width: 300px;\n            margin: auto;\n            padding: 20px;\n            border: 1px solid #ccc;\n        }\n        .form-field {\n            margin-bottom: 15px;\n        }\n        label {\n            display: block;\n            margin-bottom: 5px;\n        }\n        input[type=\"text\"],\n        input[type=\"email\"],\n        input[type=\"tel\"] {\n            width: 100%;\n            padding: 5px;\n            border: 1px solid #ccc;\n        }\n        input[type=\"submit\"] {\n            padding: 10px 20px;\n            background-color: #007bff;\n            color: #fff;\n            border: none;\n            cursor: pointer;\n        }\n        .logo-container {\n            text-align: center;\n            margin-bottom: 20px;\n        }\n        img {\n            max-width: 150px;\n        }\n    </style>\n\n\n</head>\n<body>\n\n\n    <div class=\"logo-container\">\n        <img src=\"https://images.saasworthy.com/neuroid_39277_logo_1658232019_h8jca.png\"> \n    </div>\n    <div class=\"form-container\">\n        <form action=\"/submit\" method=\"post\">\n            <span id=\"uuidLabel\">NeuroID UserId: {{ myUuid }}<br/>Form Id: {{ formId }}</span>\n            <div class=\"form-field\">\n                <label for=\"firstName\">First Name</label>\n                <input type=\"text\" name=\"firstName\" id=\"firstName\" required>\n            </div>\n            <div class=\"form-field\">\n                <label for=\"lastName\">Last Name</label>\n                <input type=\"text\" name=\"lastName\" id=\"lastName\" required>\n            </div>\n            <div class=\"form-field\">\n                <label for=\"phone\">Phone</label>\n                <input type=\"tel\" name=\"phone\" id=\"phone\" required>\n            </div>\n            <div class=\"form-field\">\n                <label for=\"email\">Email</label>\n                <input type=\"email\" name=\"email\" id=\"email\" required>\n            </div>\n            <div class=\"form-field\">\n                <label for=\"address\">Address</label>\n                <input type=\"text\" name=\"address\" id=\"address\" required>\n            </div>\n            <div class=\"form-field\">\n                <input type=\"submit\" value=\"Submit\">\n            </div>\n        </form>\n    </div>\n</body>\n</html> "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}